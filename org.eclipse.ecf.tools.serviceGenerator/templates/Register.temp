package

import java.io.File;
import java.io.FileInputStream;
import java.net.URL;
import java.util.Properties;

import org.eclipse.core.runtime.FileLocator;
import org.eclipse.ecf.core.ContainerCreateException;
import org.eclipse.ecf.core.IContainer;
import org.eclipse.ecf.core.IContainerManager;
import org.eclipse.ecf.remoteservice.IRemoteServiceContainerAdapter;
import org.osgi.framework.Bundle;
import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;


public class ServiceRegisterClassName{ 

	private ServiceTracker containerManagerServiceTracker;
	private Properties prop;
	private Bundle bundle;

   public ServiceRegisterClassName()throws Exception{
	    bundle = FrameworkUtil.getBundle(this.getClass());
	    URL fileURL = bundle.getEntry("service.properties");
		//TODO Do not use Eclipse specific FileLocator (replace with similar functionality in OSGi)
		//Generated code should not import org.eclipse.core.runtime as this might not be available (e.g. if running ECF on Apache Felix OSGi runtime.
	    File file = new File(FileLocator.resolve(fileURL).toURI());
  	    prop = new Properties();
		prop.load(new FileInputStream(file));
   }
   
	public void register()
			throws ContainerCreateException {
		IContainerManager containerManager = getContainerManagerService(bundle.getBundleContext());
		IContainer container = containerManager.getContainerFactory()
				.createContainer(prop.getProperty("container"));
		IRemoteServiceContainerAdapter containerAdapter = (IRemoteServiceContainerAdapter) container
				.getAdapter(IRemoteServiceContainerAdapter.class);
		containerAdapter.registerRemoteService(new String[] { "serviceInterface" },
				serviceImplclassname.class, null);
	}
	
	private IContainerManager getContainerManagerService(BundleContext context) {

		if (containerManagerServiceTracker == null) {
			containerManagerServiceTracker = new ServiceTracker(context,
					IContainerManager.class.getName(), null);
			containerManagerServiceTracker.open();
		}
		return (IContainerManager) containerManagerServiceTracker.getService();
	}
}
	